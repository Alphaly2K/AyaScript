// Generated from AyaScript.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class AyaScriptLexer extends Lexer {
	public static readonly WS = 1;
	public static readonly INT = 2;
	public static readonly ASSIGN = 3;
	public static readonly SEMI = 4;
	public static readonly DOT = 5;
	public static readonly LBRACK = 6;
	public static readonly RBRACK = 7;
	public static readonly LBRACE = 8;
	public static readonly RBRACE = 9;
	public static readonly LPAREN = 10;
	public static readonly RPAREN = 11;
	public static readonly COMMA = 12;
	public static readonly EXPORT = 13;
	public static readonly VAR = 14;
	public static readonly FUNC = 15;
	public static readonly RETURN = 16;
	public static readonly IF = 17;
	public static readonly ELSE = 18;
	public static readonly WHILE = 19;
	public static readonly BREAK = 20;
	public static readonly CONTINUE = 21;
	public static readonly CLASS = 22;
	public static readonly EXTENDS = 23;
	public static readonly IMPLEMENTS = 24;
	public static readonly COLON = 25;
	public static readonly VOID = 26;
	public static readonly NEW = 27;
	public static readonly CONSTRUCTOR = 28;
	public static readonly PRIVATE = 29;
	public static readonly STATIC = 30;
	public static readonly PUBLIC = 31;
	public static readonly FINAL = 32;
	public static readonly OVERRIDES = 33;
	public static readonly ID = 34;
	public static readonly PLUS = 35;
	public static readonly MINUS = 36;
	public static readonly MULT = 37;
	public static readonly DIV = 38;
	public static readonly MOD = 39;
	public static readonly EQ = 40;
	public static readonly NEQ = 41;
	public static readonly GT = 42;
	public static readonly LT = 43;
	public static readonly GTE = 44;
	public static readonly LTE = 45;
	public static readonly AND = 46;
	public static readonly OR = 47;
	public static readonly NOT = 48;
	public static readonly INCREAMENT = 49;
	public static readonly DECREAMENT = 50;
	public static readonly STRING = 51;
	public static readonly COMMENT = 52;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"WS", "INT", "ASSIGN", "SEMI", "DOT", "LBRACK", "RBRACK", "LBRACE", "RBRACE", 
		"LPAREN", "RPAREN", "COMMA", "EXPORT", "VAR", "FUNC", "RETURN", "IF", 
		"ELSE", "WHILE", "BREAK", "CONTINUE", "CLASS", "EXTENDS", "IMPLEMENTS", 
		"COLON", "VOID", "NEW", "CONSTRUCTOR", "PRIVATE", "STATIC", "PUBLIC", 
		"FINAL", "OVERRIDES", "ID", "PLUS", "MINUS", "MULT", "DIV", "MOD", "EQ", 
		"NEQ", "GT", "LT", "GTE", "LTE", "AND", "OR", "NOT", "INCREAMENT", "DECREAMENT", 
		"STRING", "COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'='", "';'", "'.'", "'['", "']'", "'{'", 
		"'}'", "'('", "')'", "','", "'export'", "'var'", "'func'", "'return'", 
		"'if'", "'else'", "'while'", "'break'", "'continue'", "'class'", "'extends'", 
		"'implements'", "':'", "'void'", "'new'", "'constructor'", "'private'", 
		"'static'", "'public'", "'final'", "'overrides'", undefined, "'+'", "'-'", 
		"'*'", "'/'", "'%'", "'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'&&'", 
		"'||'", "'!'", "'++'", "'--'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "WS", "INT", "ASSIGN", "SEMI", "DOT", "LBRACK", "RBRACK", "LBRACE", 
		"RBRACE", "LPAREN", "RPAREN", "COMMA", "EXPORT", "VAR", "FUNC", "RETURN", 
		"IF", "ELSE", "WHILE", "BREAK", "CONTINUE", "CLASS", "EXTENDS", "IMPLEMENTS", 
		"COLON", "VOID", "NEW", "CONSTRUCTOR", "PRIVATE", "STATIC", "PUBLIC", 
		"FINAL", "OVERRIDES", "ID", "PLUS", "MINUS", "MULT", "DIV", "MOD", "EQ", 
		"NEQ", "GT", "LT", "GTE", "LTE", "AND", "OR", "NOT", "INCREAMENT", "DECREAMENT", 
		"STRING", "COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(AyaScriptLexer._LITERAL_NAMES, AyaScriptLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return AyaScriptLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(AyaScriptLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "AyaScript.g4"; }

	// @Override
	public get ruleNames(): string[] { return AyaScriptLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return AyaScriptLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return AyaScriptLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return AyaScriptLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x026\u015A\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x03\x02\x06\x02m\n\x02\r\x02\x0E\x02n\x03\x02\x03\x02\x03" +
		"\x03\x06\x03t\n\x03\r\x03\x0E\x03u\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x06\x03\x06\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v" +
		"\x03\v\x03\f\x03\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0E" +
		"\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10" +
		"\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x11" +
		"\x03\x12\x03\x12\x03\x12\x03\x13\x03\x13\x03\x13\x03\x13\x03\x13\x03\x14" +
		"\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15\x03\x15" +
		"\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x18" +
		"\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03\x19" +
		"\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19" +
		"\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C" +
		"\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D" +
		"\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1E\x03\x1E" +
		"\x03\x1E\x03\x1E\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03\x1F\x03\x1F\x03\x1F" +
		"\x03\x1F\x03\x1F\x03 \x03 \x03 \x03 \x03 \x03 \x03 \x03!\x03!\x03!\x03" +
		"!\x03!\x03!\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03\"\x03" +
		"\"\x03#\x03#\x07#\u0118\n#\f#\x0E#\u011B\v#\x03$\x03$\x03%\x03%\x03&\x03" +
		"&\x03\'\x03\'\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03*\x03+\x03+\x03,\x03" +
		",\x03-\x03-\x03-\x03.\x03.\x03.\x03/\x03/\x03/\x030\x030\x030\x031\x03" +
		"1\x032\x032\x032\x033\x033\x033\x034\x034\x034\x034\x074\u0149\n4\f4\x0E" +
		"4\u014C\v4\x034\x034\x035\x035\x035\x035\x075\u0154\n5\f5\x0E5\u0157\v" +
		"5\x035\x035\x02\x02\x026\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06" +
		"\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19" +
		"\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14" +
		"\'\x02\x15)\x02\x16+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02" +
		"\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I" +
		"\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x02" +
		"1a\x022c\x023e\x024g\x025i\x026\x03\x02\b\x05\x02\v\f\x0F\x0F\"\"\x03" +
		"\x022;\x05\x02C\\aac|\x06\x022;C\\aac|\x04\x02$$^^\x04\x02\f\f\x0F\x0F" +
		"\x02\u015F\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07\x03" +
		"\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03\x02" +
		"\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03\x02" +
		"\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03\x02" +
		"\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03\x02" +
		"\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02\x02" +
		"\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02-" +
		"\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02" +
		"\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03" +
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02" +
		"\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02" +
		"O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02" +
		"\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02" +
		"\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03\x02\x02\x02\x02c\x03" +
		"\x02\x02\x02\x02e\x03\x02\x02\x02\x02g\x03\x02\x02\x02\x02i\x03\x02\x02" +
		"\x02\x03l\x03\x02\x02\x02\x05s\x03\x02\x02\x02\x07w\x03\x02\x02\x02\t" +
		"y\x03\x02\x02\x02\v{\x03\x02\x02\x02\r}\x03\x02\x02\x02\x0F\x7F\x03\x02" +
		"\x02\x02\x11\x81\x03\x02\x02\x02\x13\x83\x03\x02\x02\x02\x15\x85\x03\x02" +
		"\x02\x02\x17\x87\x03\x02\x02\x02\x19\x89\x03\x02\x02\x02\x1B\x8B\x03\x02" +
		"\x02\x02\x1D\x92\x03\x02\x02\x02\x1F\x96\x03\x02\x02\x02!\x9B\x03\x02" +
		"\x02\x02#\xA2\x03\x02\x02\x02%\xA5\x03\x02\x02\x02\'\xAA\x03\x02\x02\x02" +
		")\xB0\x03\x02\x02\x02+\xB6\x03\x02\x02\x02-\xBF\x03\x02\x02\x02/\xC5\x03" +
		"\x02\x02\x021\xCD\x03\x02\x02\x023\xD8\x03\x02\x02\x025\xDA\x03\x02\x02" +
		"\x027\xDF\x03\x02\x02\x029\xE3\x03\x02\x02\x02;\xEF\x03\x02\x02\x02=\xF7" +
		"\x03\x02\x02\x02?\xFE\x03\x02\x02\x02A\u0105\x03\x02\x02\x02C\u010B\x03" +
		"\x02\x02\x02E\u0115\x03\x02\x02\x02G\u011C\x03\x02\x02\x02I\u011E\x03" +
		"\x02\x02\x02K\u0120\x03\x02\x02\x02M\u0122\x03\x02\x02\x02O\u0124\x03" +
		"\x02\x02\x02Q\u0126\x03\x02\x02\x02S\u0129\x03\x02\x02\x02U\u012C\x03" +
		"\x02\x02\x02W\u012E\x03\x02\x02\x02Y\u0130\x03\x02\x02\x02[\u0133\x03" +
		"\x02\x02\x02]\u0136\x03\x02\x02\x02_\u0139\x03\x02\x02\x02a\u013C\x03" +
		"\x02\x02\x02c\u013E\x03\x02\x02\x02e\u0141\x03\x02\x02\x02g\u0144\x03" +
		"\x02\x02\x02i\u014F\x03\x02\x02\x02km\t\x02\x02\x02lk\x03\x02\x02\x02" +
		"mn\x03\x02\x02\x02nl\x03\x02\x02\x02no\x03\x02\x02\x02op\x03\x02\x02\x02" +
		"pq\b\x02\x02\x02q\x04\x03\x02\x02\x02rt\t\x03\x02\x02sr\x03\x02\x02\x02" +
		"tu\x03\x02\x02\x02us\x03\x02\x02\x02uv\x03\x02\x02\x02v\x06\x03\x02\x02" +
		"\x02wx\x07?\x02\x02x\b\x03\x02\x02\x02yz\x07=\x02\x02z\n\x03\x02\x02\x02" +
		"{|\x070\x02\x02|\f\x03\x02\x02\x02}~\x07]\x02\x02~\x0E\x03\x02\x02\x02" +
		"\x7F\x80\x07_\x02\x02\x80\x10\x03\x02\x02\x02\x81\x82\x07}\x02\x02\x82" +
		"\x12\x03\x02\x02\x02\x83\x84\x07\x7F\x02\x02\x84\x14\x03\x02\x02\x02\x85" +
		"\x86\x07*\x02\x02\x86\x16\x03\x02\x02\x02\x87\x88\x07+\x02\x02\x88\x18" +
		"\x03\x02\x02\x02\x89\x8A\x07.\x02\x02\x8A\x1A\x03\x02\x02\x02\x8B\x8C" +
		"\x07g\x02\x02\x8C\x8D\x07z\x02\x02\x8D\x8E\x07r\x02\x02\x8E\x8F\x07q\x02" +
		"\x02\x8F\x90\x07t\x02\x02\x90\x91\x07v\x02\x02\x91\x1C\x03\x02\x02\x02" +
		"\x92\x93\x07x\x02\x02\x93\x94\x07c\x02\x02\x94\x95\x07t\x02\x02\x95\x1E" +
		"\x03\x02\x02\x02\x96\x97\x07h\x02\x02\x97\x98\x07w\x02\x02\x98\x99\x07" +
		"p\x02\x02\x99\x9A\x07e\x02\x02\x9A \x03\x02\x02\x02\x9B\x9C\x07t\x02\x02" +
		"\x9C\x9D\x07g\x02\x02\x9D\x9E\x07v\x02\x02\x9E\x9F\x07w\x02\x02\x9F\xA0" +
		"\x07t\x02\x02\xA0\xA1\x07p\x02\x02\xA1\"\x03\x02\x02\x02\xA2\xA3\x07k" +
		"\x02\x02\xA3\xA4\x07h\x02\x02\xA4$\x03\x02\x02\x02\xA5\xA6\x07g\x02\x02" +
		"\xA6\xA7\x07n\x02\x02\xA7\xA8\x07u\x02\x02\xA8\xA9\x07g\x02\x02\xA9&\x03" +
		"\x02\x02\x02\xAA\xAB\x07y\x02\x02\xAB\xAC\x07j\x02\x02\xAC\xAD\x07k\x02" +
		"\x02\xAD\xAE\x07n\x02\x02\xAE\xAF\x07g\x02\x02\xAF(\x03\x02\x02\x02\xB0" +
		"\xB1\x07d\x02\x02\xB1\xB2\x07t\x02\x02\xB2\xB3\x07g\x02\x02\xB3\xB4\x07" +
		"c\x02\x02\xB4\xB5\x07m\x02\x02\xB5*\x03\x02\x02\x02\xB6\xB7\x07e\x02\x02" +
		"\xB7\xB8\x07q\x02\x02\xB8\xB9\x07p\x02\x02\xB9\xBA\x07v\x02\x02\xBA\xBB" +
		"\x07k\x02\x02\xBB\xBC\x07p\x02\x02\xBC\xBD\x07w\x02\x02\xBD\xBE\x07g\x02" +
		"\x02\xBE,\x03\x02\x02\x02\xBF\xC0\x07e\x02\x02\xC0\xC1\x07n\x02\x02\xC1" +
		"\xC2\x07c\x02\x02\xC2\xC3\x07u\x02\x02\xC3\xC4\x07u\x02\x02\xC4.\x03\x02" +
		"\x02\x02\xC5\xC6\x07g\x02\x02\xC6\xC7\x07z\x02\x02\xC7\xC8\x07v\x02\x02" +
		"\xC8\xC9\x07g\x02\x02\xC9\xCA\x07p\x02\x02\xCA\xCB\x07f\x02\x02\xCB\xCC" +
		"\x07u\x02\x02\xCC0\x03\x02\x02\x02\xCD\xCE\x07k\x02\x02\xCE\xCF\x07o\x02" +
		"\x02\xCF\xD0\x07r\x02\x02\xD0\xD1\x07n\x02\x02\xD1\xD2\x07g\x02\x02\xD2" +
		"\xD3\x07o\x02\x02\xD3\xD4\x07g\x02\x02\xD4\xD5\x07p\x02\x02\xD5\xD6\x07" +
		"v\x02\x02\xD6\xD7\x07u\x02\x02\xD72\x03\x02\x02\x02\xD8\xD9\x07<\x02\x02" +
		"\xD94\x03\x02\x02\x02\xDA\xDB\x07x\x02\x02\xDB\xDC\x07q\x02\x02\xDC\xDD" +
		"\x07k\x02\x02\xDD\xDE\x07f\x02\x02\xDE6\x03\x02\x02\x02\xDF\xE0\x07p\x02" +
		"\x02\xE0\xE1\x07g\x02\x02\xE1\xE2\x07y\x02\x02\xE28\x03\x02\x02\x02\xE3" +
		"\xE4\x07e\x02\x02\xE4\xE5\x07q\x02\x02\xE5\xE6\x07p\x02\x02\xE6\xE7\x07" +
		"u\x02\x02\xE7\xE8\x07v\x02\x02\xE8\xE9\x07t\x02\x02\xE9\xEA\x07w\x02\x02" +
		"\xEA\xEB\x07e\x02\x02\xEB\xEC\x07v\x02\x02\xEC\xED\x07q\x02\x02\xED\xEE" +
		"\x07t\x02\x02\xEE:\x03\x02\x02\x02\xEF\xF0\x07r\x02\x02\xF0\xF1\x07t\x02" +
		"\x02\xF1\xF2\x07k\x02\x02\xF2\xF3\x07x\x02\x02\xF3\xF4\x07c\x02\x02\xF4" +
		"\xF5\x07v\x02\x02\xF5\xF6\x07g\x02\x02\xF6<\x03\x02\x02\x02\xF7\xF8\x07" +
		"u\x02\x02\xF8\xF9\x07v\x02\x02\xF9\xFA\x07c\x02\x02\xFA\xFB\x07v\x02\x02" +
		"\xFB\xFC\x07k\x02\x02\xFC\xFD\x07e\x02\x02\xFD>\x03\x02\x02\x02\xFE\xFF" +
		"\x07r\x02\x02\xFF\u0100\x07w\x02\x02\u0100\u0101\x07d\x02\x02\u0101\u0102" +
		"\x07n\x02\x02\u0102\u0103\x07k\x02\x02\u0103\u0104\x07e\x02\x02\u0104" +
		"@\x03\x02\x02\x02\u0105\u0106\x07h\x02\x02\u0106\u0107\x07k\x02\x02\u0107" +
		"\u0108\x07p\x02\x02\u0108\u0109\x07c\x02\x02\u0109\u010A\x07n\x02\x02" +
		"\u010AB\x03\x02\x02\x02\u010B\u010C\x07q\x02\x02\u010C\u010D\x07x\x02" +
		"\x02\u010D\u010E\x07g\x02\x02\u010E\u010F\x07t\x02\x02\u010F\u0110\x07" +
		"t\x02\x02\u0110\u0111\x07k\x02\x02\u0111\u0112\x07f\x02\x02\u0112\u0113" +
		"\x07g\x02\x02\u0113\u0114\x07u\x02\x02\u0114D\x03\x02\x02\x02\u0115\u0119" +
		"\t\x04\x02\x02\u0116\u0118\t\x05\x02\x02\u0117\u0116\x03\x02\x02\x02\u0118" +
		"\u011B\x03\x02\x02\x02\u0119\u0117\x03\x02\x02\x02\u0119\u011A\x03\x02" +
		"\x02\x02\u011AF\x03\x02\x02\x02\u011B\u0119\x03\x02\x02\x02\u011C\u011D" +
		"\x07-\x02\x02\u011DH\x03\x02\x02\x02\u011E\u011F\x07/\x02\x02\u011FJ\x03" +
		"\x02\x02\x02\u0120\u0121\x07,\x02\x02\u0121L\x03\x02\x02\x02\u0122\u0123" +
		"\x071\x02\x02\u0123N\x03\x02\x02\x02\u0124\u0125\x07\'\x02\x02\u0125P" +
		"\x03\x02\x02\x02\u0126\u0127\x07?\x02\x02\u0127\u0128\x07?\x02\x02\u0128" +
		"R\x03\x02\x02\x02\u0129\u012A\x07#\x02\x02\u012A\u012B\x07?\x02\x02\u012B" +
		"T\x03\x02\x02\x02\u012C\u012D\x07@\x02\x02\u012DV\x03\x02\x02\x02\u012E" +
		"\u012F\x07>\x02\x02\u012FX\x03\x02\x02\x02\u0130\u0131\x07@\x02\x02\u0131" +
		"\u0132\x07?\x02\x02\u0132Z\x03\x02\x02\x02\u0133\u0134\x07>\x02\x02\u0134" +
		"\u0135\x07?\x02\x02\u0135\\\x03\x02\x02\x02\u0136\u0137\x07(\x02\x02\u0137" +
		"\u0138\x07(\x02\x02\u0138^\x03\x02\x02\x02\u0139\u013A\x07~\x02\x02\u013A" +
		"\u013B\x07~\x02\x02\u013B`\x03\x02\x02\x02\u013C\u013D\x07#\x02\x02\u013D" +
		"b\x03\x02\x02\x02\u013E\u013F\x07-\x02\x02\u013F\u0140\x07-\x02\x02\u0140" +
		"d\x03\x02\x02\x02\u0141\u0142\x07/\x02\x02\u0142\u0143\x07/\x02\x02\u0143" +
		"f\x03\x02\x02\x02\u0144\u014A\x07$\x02\x02\u0145\u0149\n\x06\x02\x02\u0146" +
		"\u0147\x07^\x02\x02\u0147\u0149\v\x02\x02\x02\u0148\u0145\x03\x02\x02" +
		"\x02\u0148\u0146\x03\x02\x02\x02\u0149\u014C\x03\x02\x02\x02\u014A\u0148" +
		"\x03\x02\x02\x02\u014A\u014B\x03\x02\x02\x02\u014B\u014D\x03\x02\x02\x02" +
		"\u014C\u014A\x03\x02\x02\x02\u014D\u014E\x07$\x02\x02\u014Eh\x03\x02\x02" +
		"\x02\u014F\u0150\x071\x02\x02\u0150\u0151\x071\x02\x02\u0151\u0155\x03" +
		"\x02\x02\x02\u0152\u0154\n\x07\x02\x02\u0153\u0152\x03\x02\x02\x02\u0154" +
		"\u0157\x03\x02\x02\x02\u0155\u0153\x03\x02\x02\x02\u0155\u0156\x03\x02" +
		"\x02\x02\u0156\u0158\x03\x02\x02\x02\u0157\u0155\x03\x02\x02\x02\u0158" +
		"\u0159\b5\x02\x02\u0159j\x03\x02\x02\x02\t\x02nu\u0119\u0148\u014A\u0155" +
		"\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!AyaScriptLexer.__ATN) {
			AyaScriptLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(AyaScriptLexer._serializedATN));
		}

		return AyaScriptLexer.__ATN;
	}

}

