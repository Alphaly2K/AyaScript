// Generated from AyaScript.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class AyaScriptLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly WS = 4;
	public static readonly INT = 5;
	public static readonly ASSIGN = 6;
	public static readonly SEMI = 7;
	public static readonly DOT = 8;
	public static readonly LBRACK = 9;
	public static readonly RBRACK = 10;
	public static readonly LPAREN = 11;
	public static readonly RPAREN = 12;
	public static readonly COMMA = 13;
	public static readonly EXPORT = 14;
	public static readonly VAR = 15;
	public static readonly FUNC = 16;
	public static readonly RETURN = 17;
	public static readonly IF = 18;
	public static readonly ELSE = 19;
	public static readonly WHILE = 20;
	public static readonly BREAK = 21;
	public static readonly CONTINUE = 22;
	public static readonly COLON = 23;
	public static readonly VOID = 24;
	public static readonly SEND = 25;
	public static readonly READ = 26;
	public static readonly ID = 27;
	public static readonly PLUS = 28;
	public static readonly MINUS = 29;
	public static readonly MULT = 30;
	public static readonly DIV = 31;
	public static readonly MOD = 32;
	public static readonly EQ = 33;
	public static readonly NEQ = 34;
	public static readonly GT = 35;
	public static readonly LT = 36;
	public static readonly GTE = 37;
	public static readonly LTE = 38;
	public static readonly AND = 39;
	public static readonly OR = 40;
	public static readonly NOT = 41;
	public static readonly INCREAMENT = 42;
	public static readonly DECREAMENT = 43;
	public static readonly STRING = 44;
	public static readonly COMMENT = 45;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "WS", "INT", "ASSIGN", "SEMI", "DOT", "LBRACK", 
		"RBRACK", "LPAREN", "RPAREN", "COMMA", "EXPORT", "VAR", "FUNC", "RETURN", 
		"IF", "ELSE", "WHILE", "BREAK", "CONTINUE", "COLON", "VOID", "SEND", "READ", 
		"ID", "PLUS", "MINUS", "MULT", "DIV", "MOD", "EQ", "NEQ", "GT", "LT", 
		"GTE", "LTE", "AND", "OR", "NOT", "INCREAMENT", "DECREAMENT", "STRING", 
		"COMMENT",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'{'", "'}'", "'struct'", undefined, undefined, "'='", "';'", 
		"'.'", "'['", "']'", "'('", "')'", "','", "'export'", "'var'", "'func'", 
		"'return'", "'if'", "'else'", "'while'", "'break'", "'continue'", "':'", 
		"'void'", "'send'", "'read'", undefined, "'+'", "'-'", "'*'", "'/'", "'%'", 
		"'=='", "'!='", "'>'", "'<'", "'>='", "'<='", "'&&'", "'||'", "'!'", "'++'", 
		"'--'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, "WS", "INT", "ASSIGN", "SEMI", 
		"DOT", "LBRACK", "RBRACK", "LPAREN", "RPAREN", "COMMA", "EXPORT", "VAR", 
		"FUNC", "RETURN", "IF", "ELSE", "WHILE", "BREAK", "CONTINUE", "COLON", 
		"VOID", "SEND", "READ", "ID", "PLUS", "MINUS", "MULT", "DIV", "MOD", "EQ", 
		"NEQ", "GT", "LT", "GTE", "LTE", "AND", "OR", "NOT", "INCREAMENT", "DECREAMENT", 
		"STRING", "COMMENT",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(AyaScriptLexer._LITERAL_NAMES, AyaScriptLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return AyaScriptLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(AyaScriptLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "AyaScript.g4"; }

	// @Override
	public get ruleNames(): string[] { return AyaScriptLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return AyaScriptLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return AyaScriptLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return AyaScriptLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02/\u010E\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x03\x02\x03\x02\x03\x03\x03\x03\x03\x04\x03" +
		"\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x05\x06\x05j\n\x05\r" +
		"\x05\x0E\x05k\x03\x05\x03\x05\x03\x06\x06\x06q\n\x06\r\x06\x0E\x06r\x03" +
		"\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03\v\x03\v\x03\f\x03" +
		"\f\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F" +
		"\x03\x0F\x03\x0F\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11" +
		"\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12\x03\x12" +
		"\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03\x15" +
		"\x03\x15\x03\x15\x03\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17\x03\x17" +
		"\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x19\x03\x19\x03\x19" +
		"\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03\x1B\x03\x1B\x03\x1B" +
		"\x03\x1B\x03\x1C\x03\x1C\x07\x1C\xCC\n\x1C\f\x1C\x0E\x1C\xCF\v\x1C\x03" +
		"\x1D\x03\x1D\x03\x1E\x03\x1E\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"" +
		"\x03\"\x03\"\x03#\x03#\x03#\x03$\x03$\x03%\x03%\x03&\x03&\x03&\x03\'\x03" +
		"\'\x03\'\x03(\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03+\x03+\x03+\x03,\x03" +
		",\x03,\x03-\x03-\x03-\x03-\x07-\xFD\n-\f-\x0E-\u0100\v-\x03-\x03-\x03" +
		".\x03.\x03.\x03.\x07.\u0108\n.\f.\x0E.\u010B\v.\x03.\x03.\x02\x02\x02" +
		"/\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F" +
		"\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F" +
		"\x1D\x02\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16" +
		"+\x02\x17-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E" +
		";\x02\x1F=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02" +
		")Q\x02*S\x02+U\x02,W\x02-Y\x02.[\x02/\x03\x02\b\x05\x02\v\f\x0F\x0F\"" +
		"\"\x03\x022;\x05\x02C\\aac|\x06\x022;C\\aac|\x04\x02$$^^\x04\x02\f\f\x0F" +
		"\x0F\x02\u0113\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02\x02\x02\x07" +
		"\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02\x02\r\x03" +
		"\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02\x02\x13\x03" +
		"\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02\x02\x19\x03" +
		"\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02\x02\x1F\x03" +
		"\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02%\x03\x02\x02" +
		"\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03\x02\x02\x02\x02" +
		"-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02\x02\x023\x03\x02" +
		"\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x029\x03\x02\x02\x02" +
		"\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02\x02\x02\x02A\x03" +
		"\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02\x02G\x03\x02\x02" +
		"\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03\x02\x02\x02\x02" +
		"O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02\x02\x02U\x03\x02" +
		"\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02[\x03\x02\x02\x02" +
		"\x03]\x03\x02\x02\x02\x05_\x03\x02\x02\x02\x07a\x03\x02\x02\x02\ti\x03" +
		"\x02\x02\x02\vp\x03\x02\x02\x02\rt\x03\x02\x02\x02\x0Fv\x03\x02\x02\x02" +
		"\x11x\x03\x02\x02\x02\x13z\x03\x02\x02\x02\x15|\x03\x02\x02\x02\x17~\x03" +
		"\x02\x02\x02\x19\x80\x03\x02\x02\x02\x1B\x82\x03\x02\x02\x02\x1D\x84\x03" +
		"\x02\x02\x02\x1F\x8B\x03\x02\x02\x02!\x8F\x03\x02\x02\x02#\x94\x03\x02" +
		"\x02\x02%\x9B\x03\x02\x02\x02\'\x9E\x03\x02\x02\x02)\xA3\x03\x02\x02\x02" +
		"+\xA9\x03\x02\x02\x02-\xAF\x03\x02\x02\x02/\xB8\x03\x02\x02\x021\xBA\x03" +
		"\x02\x02\x023\xBF\x03\x02\x02\x025\xC4\x03\x02\x02\x027\xC9\x03\x02\x02" +
		"\x029\xD0\x03\x02\x02\x02;\xD2\x03\x02\x02\x02=\xD4\x03\x02\x02\x02?\xD6" +
		"\x03\x02\x02\x02A\xD8\x03\x02\x02\x02C\xDA\x03\x02\x02\x02E\xDD\x03\x02" +
		"\x02\x02G\xE0\x03\x02\x02\x02I\xE2\x03\x02\x02\x02K\xE4\x03\x02\x02\x02" +
		"M\xE7\x03\x02\x02\x02O\xEA\x03\x02\x02\x02Q\xED\x03\x02\x02\x02S\xF0\x03" +
		"\x02\x02\x02U\xF2\x03\x02\x02\x02W\xF5\x03\x02\x02\x02Y\xF8\x03\x02\x02" +
		"\x02[\u0103\x03\x02\x02\x02]^\x07}\x02\x02^\x04\x03\x02\x02\x02_`\x07" +
		"\x7F\x02\x02`\x06\x03\x02\x02\x02ab\x07u\x02\x02bc\x07v\x02\x02cd\x07" +
		"t\x02\x02de\x07w\x02\x02ef\x07e\x02\x02fg\x07v\x02\x02g\b\x03\x02\x02" +
		"\x02hj\t\x02\x02\x02ih\x03\x02\x02\x02jk\x03\x02\x02\x02ki\x03\x02\x02" +
		"\x02kl\x03\x02\x02\x02lm\x03\x02\x02\x02mn\b\x05\x02\x02n\n\x03\x02\x02" +
		"\x02oq\t\x03\x02\x02po\x03\x02\x02\x02qr\x03\x02\x02\x02rp\x03\x02\x02" +
		"\x02rs\x03\x02\x02\x02s\f\x03\x02\x02\x02tu\x07?\x02\x02u\x0E\x03\x02" +
		"\x02\x02vw\x07=\x02\x02w\x10\x03\x02\x02\x02xy\x070\x02\x02y\x12\x03\x02" +
		"\x02\x02z{\x07]\x02\x02{\x14\x03\x02\x02\x02|}\x07_\x02\x02}\x16\x03\x02" +
		"\x02\x02~\x7F\x07*\x02\x02\x7F\x18\x03\x02\x02\x02\x80\x81\x07+\x02\x02" +
		"\x81\x1A\x03\x02\x02\x02\x82\x83\x07.\x02\x02\x83\x1C\x03\x02\x02\x02" +
		"\x84\x85\x07g\x02\x02\x85\x86\x07z\x02\x02\x86\x87\x07r\x02\x02\x87\x88" +
		"\x07q\x02\x02\x88\x89\x07t\x02\x02\x89\x8A\x07v\x02\x02\x8A\x1E\x03\x02" +
		"\x02\x02\x8B\x8C\x07x\x02\x02\x8C\x8D\x07c\x02\x02\x8D\x8E\x07t\x02\x02" +
		"\x8E \x03\x02\x02\x02\x8F\x90\x07h\x02\x02\x90\x91\x07w\x02\x02\x91\x92" +
		"\x07p\x02\x02\x92\x93\x07e\x02\x02\x93\"\x03\x02\x02\x02\x94\x95\x07t" +
		"\x02\x02\x95\x96\x07g\x02\x02\x96\x97\x07v\x02\x02\x97\x98\x07w\x02\x02" +
		"\x98\x99\x07t\x02\x02\x99\x9A\x07p\x02\x02\x9A$\x03\x02\x02\x02\x9B\x9C" +
		"\x07k\x02\x02\x9C\x9D\x07h\x02\x02\x9D&\x03\x02\x02\x02\x9E\x9F\x07g\x02" +
		"\x02\x9F\xA0\x07n\x02\x02\xA0\xA1\x07u\x02\x02\xA1\xA2\x07g\x02\x02\xA2" +
		"(\x03\x02\x02\x02\xA3\xA4\x07y\x02\x02\xA4\xA5\x07j\x02\x02\xA5\xA6\x07" +
		"k\x02\x02\xA6\xA7\x07n\x02\x02\xA7\xA8\x07g\x02\x02\xA8*\x03\x02\x02\x02" +
		"\xA9\xAA\x07d\x02\x02\xAA\xAB\x07t\x02\x02\xAB\xAC\x07g\x02\x02\xAC\xAD" +
		"\x07c\x02\x02\xAD\xAE\x07m\x02\x02\xAE,\x03\x02\x02\x02\xAF\xB0\x07e\x02" +
		"\x02\xB0\xB1\x07q\x02\x02\xB1\xB2\x07p\x02\x02\xB2\xB3\x07v\x02\x02\xB3" +
		"\xB4\x07k\x02\x02\xB4\xB5\x07p\x02\x02\xB5\xB6\x07w\x02\x02\xB6\xB7\x07" +
		"g\x02\x02\xB7.\x03\x02\x02\x02\xB8\xB9\x07<\x02\x02\xB90\x03\x02\x02\x02" +
		"\xBA\xBB\x07x\x02\x02\xBB\xBC\x07q\x02\x02\xBC\xBD\x07k\x02\x02\xBD\xBE" +
		"\x07f\x02\x02\xBE2\x03\x02\x02\x02\xBF\xC0\x07u\x02\x02\xC0\xC1\x07g\x02" +
		"\x02\xC1\xC2\x07p\x02\x02\xC2\xC3\x07f\x02\x02\xC34\x03\x02\x02\x02\xC4" +
		"\xC5\x07t\x02\x02\xC5\xC6\x07g\x02\x02\xC6\xC7\x07c\x02\x02\xC7\xC8\x07" +
		"f\x02\x02\xC86\x03\x02\x02\x02\xC9\xCD\t\x04\x02\x02\xCA\xCC\t\x05\x02" +
		"\x02\xCB\xCA\x03\x02\x02\x02\xCC\xCF\x03\x02\x02\x02\xCD\xCB\x03\x02\x02" +
		"\x02\xCD\xCE\x03\x02\x02\x02\xCE8\x03\x02\x02\x02\xCF\xCD\x03\x02\x02" +
		"\x02\xD0\xD1\x07-\x02\x02\xD1:\x03\x02\x02\x02\xD2\xD3\x07/\x02\x02\xD3" +
		"<\x03\x02\x02\x02\xD4\xD5\x07,\x02\x02\xD5>\x03\x02\x02\x02\xD6\xD7\x07" +
		"1\x02\x02\xD7@\x03\x02\x02\x02\xD8\xD9\x07\'\x02\x02\xD9B\x03\x02\x02" +
		"\x02\xDA\xDB\x07?\x02\x02\xDB\xDC\x07?\x02\x02\xDCD\x03\x02\x02\x02\xDD" +
		"\xDE\x07#\x02\x02\xDE\xDF\x07?\x02\x02\xDFF\x03\x02\x02\x02\xE0\xE1\x07" +
		"@\x02\x02\xE1H\x03\x02\x02\x02\xE2\xE3\x07>\x02\x02\xE3J\x03\x02\x02\x02" +
		"\xE4\xE5\x07@\x02\x02\xE5\xE6\x07?\x02\x02\xE6L\x03\x02\x02\x02\xE7\xE8" +
		"\x07>\x02\x02\xE8\xE9\x07?\x02\x02\xE9N\x03\x02\x02\x02\xEA\xEB\x07(\x02" +
		"\x02\xEB\xEC\x07(\x02\x02\xECP\x03\x02\x02\x02\xED\xEE\x07~\x02\x02\xEE" +
		"\xEF\x07~\x02\x02\xEFR\x03\x02\x02\x02\xF0\xF1\x07#\x02\x02\xF1T\x03\x02" +
		"\x02\x02\xF2\xF3\x07-\x02\x02\xF3\xF4\x07-\x02\x02\xF4V\x03\x02\x02\x02" +
		"\xF5\xF6\x07/\x02\x02\xF6\xF7\x07/\x02\x02\xF7X\x03\x02\x02\x02\xF8\xFE" +
		"\x07$\x02\x02\xF9\xFD\n\x06\x02\x02\xFA\xFB\x07^\x02\x02\xFB\xFD\v\x02" +
		"\x02\x02\xFC\xF9\x03\x02\x02\x02\xFC\xFA\x03\x02\x02\x02\xFD\u0100\x03" +
		"\x02\x02\x02\xFE\xFC\x03\x02\x02\x02\xFE\xFF\x03\x02\x02\x02\xFF\u0101" +
		"\x03\x02\x02\x02\u0100\xFE\x03\x02\x02\x02\u0101\u0102\x07$\x02\x02\u0102" +
		"Z\x03\x02\x02\x02\u0103\u0104\x071\x02\x02\u0104\u0105\x071\x02\x02\u0105" +
		"\u0109\x03\x02\x02\x02\u0106\u0108\n\x07\x02\x02\u0107\u0106\x03\x02\x02" +
		"\x02\u0108\u010B\x03\x02\x02\x02\u0109\u0107\x03\x02\x02\x02\u0109\u010A" +
		"\x03\x02\x02\x02\u010A\u010C\x03\x02\x02\x02\u010B\u0109\x03\x02\x02\x02" +
		"\u010C\u010D\b.\x02\x02\u010D\\\x03\x02\x02\x02\t\x02kr\xCD\xFC\xFE\u0109" +
		"\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!AyaScriptLexer.__ATN) {
			AyaScriptLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(AyaScriptLexer._serializedATN));
		}

		return AyaScriptLexer.__ATN;
	}

}

